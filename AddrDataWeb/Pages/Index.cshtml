@page
@model IndexModel



<div class="modal fade" id="infoModal" tabindex="-1" aria-labelledby="infoModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="infoModalLabel">Information</h5>
                <button type="button" class="btn btn-link" id="liveAlertBtn"><i class="fa fa-question"></i></button>
      </div>
      <div class="modal-body">
                <div class="container">
                    <div id="InformationAlert"></div>
                    <div class="row">
                        <div class="col-md-6">                     
                           
                            <h5>VirusTotal  </h5>
                            <p class="fw-bold">Detections: <span class="fw-normal" id="detection"></span></p>
                            <p class="fw-bold">Network: <span class="fw-normal" id="network"></span></p>
                            <p class="fw-bold">Last HTTPS Certificate Date: <span class="fw-normal" id="cert_date"></span></p>
                            <p class="fw-bold">Country: <span class="fw-normal" id="country"></span></p>
                            <p class="fw-bold">Last Analysis Date: <span class="fw-normal" id="analysis_date"></span></p>
                            <p class="fw-bold">AS Owner: <span class="fw-normal" id="as_owner"></span></p>
                        </div>
                        <div class="col-md-6">
                            <h5>AbuseIPDB </h5>
                            <p class="fw-bold">Domain: <span class="fw-normal" id="adomain"></span></p>
                            <p class="fw-bold">Abuse confidence score: <span class="fw-normal" id="abusescore"></span></p>
                            <p class="fw-bold">Usage type: <span class="fw-normal" id="usagetype"></span></p>                         
                            <p class="fw-bold">ABUSEIPDB Whitelisted: <span class="fw-normal" id="awhitelist"></span></p>
                            <p class="fw-bold">ISP: <span class="fw-normal" id="aisp"></span></p>
                            <a href="#" id="reportslink" class="link-primary">AbuseIPDB Reports</a>

                        </div>
                    </div>
                </div>
          <h4>Raw data:</h4>
        <textarea id="infoData" class="form-control" rows="10">Loading...</textarea>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
        <button type="button" class="btn-close" data-dismiss="modal" aria-hidden="true"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this record?</p>
      </div>
      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-danger" onclick="document.querySelector('#delete-form').submit();">Delete</button>
      </div>
    </div>
  </div>
</div>



<div class="text-center">
    <h1 class="display-4">Data</h1>
    <table data-toggle="table" data-pagination="true" data-search="true" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th data-sortable ="true">IP</th>
            <th data-sortable="true">Sender</th>
            <th data-sortable="true" data-field="Count">Count</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Packets != null)
{
        @foreach (var packet in Model.Packets)
        {
            <tr>
                <td>@packet.IP</td>
                <td>@packet.Sender</td>
                <td>@packet.Count</td>
                 <td>
                     <div class="btn-toolbar">
                           <div class="btn-group me-2" role="group" aria-label="First group">
                                    <button type="button" class="btn btn-info" onclick="showInfoModal('@packet.IP')"><i class="fa fa-info"></i>&nbsp; Info</button>
                           </div>   
                            <div class="btn-group me-2" role="group" aria-label="Second group">

                            <form asp-page-handler="block" asp-route-sender="@packet.Sender" asp-route-ip="@packet.IP" method="post">
                                        <button type="submit" class="btn btn-warning"><i class="fa fa-shield"></i>&nbsp; Block</button>
                            </form>
                           
                           </div>
                             <div class="btn-group me-2" role="group" aria-label="Third group">
                                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirm-delete"><i class="fa fa-remove"></i>&nbsp;Delete</button>
                            </div>
                            </div>
                            <form id="delete-form" method="post" asp-page-handler="delete" asp-route-ip="@packet.IP" style="display:none;">
                            </form>
                    </td>
                       
            </tr>
        }
}
    </tbody>
</table>
</div>

@{
    var myData = TempData["Status"];
}

@section scripts {
    <script>

        $(document).ready(function() {

    console.log("Document ready");

     var PassData = @Html.Raw(Json.Serialize(myData));
        if (PassData == true) {
                    $('#ToastBody').text('Block request sent.');
                    $("#myToast").toast("show");
            PassData = null;
      }
      console.log("PassData ready");
});


          function showInfoModal(ip) {

  // Make the API request
            fetch(`/api/info/${ip}`)
                .then(response => response.json())
                .then(data => {
                    // set textarea
                    var stringifiedData = JSON.stringify(data, null, 2);
                    document.getElementById("infoData").value = stringifiedData;

                    if (data?.virusTotal?.data?.attributes) {
                        var vt = data.virusTotal.data.attributes; // set predefined access vars for parsed data.
                        var harmlessColor = vt.last_analysis_stats.harmless > 0 ? 'text-success' : 'text-muted';
                        var maliciousColor = vt.last_analysis_stats.malicious > 0 ? 'text-danger' : 'text-muted';
                        var suspiciousColor = vt.last_analysis_stats.suspicious > 0 ? 'text-warning' : 'text-muted';
                        var undetectedColor = vt.last_analysis_stats.undetected > 0 ? 'text-secondary' : 'text-muted';
                        var timeoutColor = vt.last_analysis_stats.timeout > 0 ? 'text-secondary' : 'text-muted';

                        document.getElementById('detection').innerHTML = `<span class="${harmlessColor}">harmless: ${vt.last_analysis_stats.harmless}</span>, <span class="${maliciousColor}">malicious: ${vt.last_analysis_stats.malicious}</span>, <span class="${suspiciousColor}">suspicious: ${vt.last_analysis_stats.suspicious}</span>, <span class="${undetectedColor}">undetected: ${vt.last_analysis_stats.undetected}</span>, <span class="${timeoutColor}">timeout: ${vt.last_analysis_stats.timeout}</span>`;
                        document.getElementById('network').innerHTML = vt.network || 'N/A';
                        document.getElementById('cert_date').innerHTML = vt.last_https_certificate_date || 'N/A';
                        document.getElementById('country').innerHTML = vt.country || 'N/A';
                        document.getElementById('analysis_date').innerHTML = vt.last_analysis_date || 'N/A';
                        document.getElementById('as_owner').innerHTML = vt.as_owner || 'N/A';
                    }
                    if (data?.abuseIPDB?.data) {
                        var ai = data.abuseIPDB.data; // set predefined access vars for parsed data.
                        document.getElementById('adomain').innerHTML = ai.domain || 'N/A';
                        let score = ai.abuseConfidenceScore || 'N/A';
                        let scoreElement = document.getElementById('abusescore');
                        if (score >= 80) {
                            scoreElement.classList.add('text-danger'); // red
                        } else if (score >= 60) {
                            scoreElement.classList.add('text-warning'); // yellow
                        } else if (score >= 30) {
                            scoreElement.classList.add('text-info'); // blue
                        } else {
                            scoreElement.classList.add('text-muted'); // gray
                        }
                        scoreElement.innerHTML = score;
                        document.getElementById('usagetype').innerHTML = ai.usageType || 'N/A';
                        document.getElementById('awhitelist').innerHTML = ai.isWhitelisted || 'N/A';
                        document.getElementById('aisp').innerHTML = ai.isp || 'N/A';
                        document.getElementById('reportslink').href = 'https://www.abuseipdb.com/check/' + ip;
                    }
                })
                .catch(error => console.error(error));

  // Show modal
  var myModal = new bootstrap.Modal(document.getElementById('infoModal'));
  myModal.show();
}




        var modalCloseBtn = document.querySelector('#infoModal .modal-footer button');

        // Add an event listener to the modal close button
        modalCloseBtn.addEventListener('click', function () {
            // Reset the values of all the elements inside the modal body
            document.getElementById('detection').innerHTML = '';
            document.getElementById('network').innerHTML = '';
            document.getElementById('cert_date').innerHTML = '';
            document.getElementById('country').innerHTML = '';
            document.getElementById('analysis_date').innerHTML = '';
            document.getElementById('as_owner').innerHTML = '';
            document.getElementById('adomain').innerHTML = '';          
            document.getElementById('abusescore').innerHTML = '';
            document.getElementById('usagetype').innerHTML = '';
            document.getElementById('awhitelist').innerHTML = '';
            document.getElementById('aisp').innerHTML = '';
            document.getElementById('infoData').value = 'Loading...';

            //reset class attribute for recoloring.
            document.getElementById('abusescore').removeAttribute('class');
        });


        const alertPlaceholder = document.getElementById('InformationAlert')

        const alertt = (message, type) => {
            const wrapper = document.createElement('div')
            wrapper.innerHTML = [
                `<div class="alert alert-${type} alert-dismissible" role="alert">`,
                `   <div>${message}</div>`,
                '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
                '</div>'
            ].join('')

            alertPlaceholder.append(wrapper)
        }

        const alertTrigger = document.getElementById('liveAlertBtn')
        if (alertTrigger) {
            alertTrigger.addEventListener('click', () => {
                alert('VirusTotal: Website scan, AbuseIPDB: IP abuse (portscan, nmap etc) ', 'info')
            })
        }
        
 

    
</script>
}